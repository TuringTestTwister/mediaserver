# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, lib, pkgs, ... }:

{
  boot.initrd.availableKernelModules = [ "xhci_pci" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  ## Fixes bluetooth stuttering due to wifi interference by only allowing 5Ghz Wifi, which does not interfer with Bluetooth
  ## https://github.com/raspberrypi/linux/issues/5522
  boot.extraModprobeConfig = ''
    options cfg80211 ieee80211_regdom="US"
    options brcmfmac roamoff=1
  '';
  hardware.firmware = with pkgs; [ 
    wireless-regdb
    firmwareLinuxNonfree
    raspberrypiWirelessFirmware
  ];

  # Enable GPU acceleration
  hardware.raspberry-pi."4".fkms-3d.enable = true;

  hardware.enableRedistributableFirmware = true;

  fileSystems."/" =
    { device = "/dev/disk/by-label/NIXOS_SD";
      fsType = "ext4";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";

  services.dbus.enable = true;

  # nixpkgs.overlays = [
  #   ((import ./overlays) { 
  #     u-boot-src = inputs.u-boot-src;
  #     rpi-linux-6_1-src = inputs.rpi-linux-6_1-src;
  #     rpi-firmware-src = inputs.rpi-firmware-src;
  #     rpi-firmware-nonfree-src = inputs.rpi-firmware-nonfree-src;
  #     rpi-bluez-firmware-src = inputs.rpi-bluez-firmware-src;
  #   })
  # ];
}
